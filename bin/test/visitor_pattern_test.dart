/// 学生列表 -- 课程列表
/// 1. 学生类，课程作为属性/方法。新增学生类型很简单，只需要实现Student的所有课程方法即可。但是如果新增一个课程，那么所有的类都得更改源码
/// 2. 课程作为类，学生作为属性/方法。新增课程很简单，只需要实现Course的所有学生类型即可。但是新增一个学生类型，则所有的课程类都需要实现这个方法，得更改源码
/// 第二条的说法是不准确的。数据库是以行作为benchmark的，一行作为整体数据才有意义。一列列，那叫数据筛选。

/// 所以问题就是，新增一行叫新增实例，当然对老实例没有影响
/// 当新增一列时，称之为新增功能。对一个类添加新功能，应该遵循对扩展开放，对修改关闭原则。新增功能，不应该影响现有/旧的源码
/// 
/// 3. 使用Visitor Pattern
/// 每一列，也就是每一个功能，都属于一种visitor。所以添加新的visitor，对student毫无影响。区别就是关联的visitor不同了。

/// 总结：主体是学生，课程是功能。坚持主体新增功能，对已有的主体不应该修改源码。功能的源码可以随意增删
/// 
/// 
